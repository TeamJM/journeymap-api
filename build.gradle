/*
 * JourneyMap API (http://journeymap.info)
 * http://bitbucket.org/TeamJM/journeymap-api
 *
 * Copyright (c) 2011-2016 Techbrew.  All Rights Reserved.
 * The following limited rights are granted to you:
 *
 * You MAY:
 *  + Write your own code that uses the API source code in journeymap.* packages as a dependency.
 *  + Write and distribute your own code that uses, modifies, or extends the example source code in example.* packages
 *  + Fork and modify any source code for the purpose of submitting Pull Requests to the TeamJM/journeymap-api repository.
 *    Submitting new or modified code to the repository means that you are granting Techbrew all rights to the submitted code.
 *
 * You MAY NOT:
 *  - Distribute source code or classes (whether modified or not) from journeymap.* packages.
 *  - Submit any code to the TeamJM/journeymap-api repository with a different license than this one.
 *  - Use code or artifacts from the repository in any way not explicitly granted by this license.
 *
 */

// Repos
buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
    }
}

// Gradle Plugins
apply plugin: 'net.minecraftforge.gradle.forge'

// Project Properties (also see gradle.properties)
group 'teamjm'
archivesBaseName = "journeymap-api"
version = project.minecraft_version + '-' + project.api_version

// Additional library dependencies
dependencies {
    testCompile 'junit:junit:4.11'
}

// ForgeGradle spec for Minecraft
minecraft {
    version = "${minecraft_version}-${forge_version}"
    runDir = "run"
    mappings = "snapshot_${snapshot}"
    replace '@API_VERSION@', project.api_version
    replace '@MC_VERSION@', project.minecraft.version
}

// Replace tokens in resources files
processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info on copy
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

// Reobfuscated jar for just the Example Mod
jar {
    dependsOn classes
    from sourceSets.main.output
    classifier = 'examplemod'
    include 'example/**'
    include 'mcmod.info'
    include 'assets/**'
    manifest {
        attributes = [
                "Manifest-Version": "1.0",
                "Implementation-Title": "Example Mod for JourneyMap API",
                "Implementation-Version": project.version,
                "Implementation-URL": "https://bitbucket.org/TeamJM/journeymap-api"
        ]
    }
}

// Jar for just the API - Stays deobfuscated so it can go in a mod project's /libs folder
task deobfJar(type: Jar, dependsOn: classes) {
    mustRunAfter = ['jar']
    classifier = 'deobf'
    from sourceSets.main.output
    include 'journeymap/**'
    manifest {
        attributes = [
                "Manifest-Version": "1.0",
                "Implementation-Title": "JourneyMap API",
                "Implementation-Version": project.version,
                "Implementation-URL": "https://bitbucket.org/TeamJM/journeymap-api"
        ]
    }
}

// Javadoc generation
javadoc {
    title = 'JourneyMap API and Example Mod'
}

// Jar for Javadocs
task javadocZip(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    extension = 'zip'
    from javadoc.destinationDir
}

// Additional artifacts produced by build task
artifacts {
    archives deobfJar
    archives javadocZip
}